plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id 'com.google.protobuf' version '0.8.12'
    id "application"
}

version "0.1"
group "org.marking"

mainClassName = "org.marking.Application"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    developmentOnly 
}

ext {
	micronautVersion = "2.0.0.M3"
    micronautGrpcVersion = "2.0.0.M3"
    protocVersion="3.12.0"
    grpcVersion="1.29.0"
}

configurations {
    all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            String group = details.requested.group
            if(group == 'io.micronaut.grpc') {
                details.useVersion(micronautGrpcVersion)
            }
        }
    }
}

dependencies {
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
	compileOnly 'org.projectlombok:lombok:1.18.12'
	
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut.grpc:micronaut-grpc-runtime"
    implementation "io.micronaut:micronaut-http-client"
    implementation "org.jooq:joor-java-8:0.9.12"
    implementation "software.amazon.awssdk:s3:2.13.24"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

test.classpath += configurations.developmentOnly
	
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
